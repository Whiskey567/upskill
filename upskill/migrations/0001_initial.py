# Generated by Django 5.1.1 on 2024-10-09 10:10

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=50, verbose_name='Название курса')),
                ('description', models.TextField(verbose_name='Описание курса')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Стоимость курса')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'ordering': ['course_name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя пользователя')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почтовый адрес')),
                ('password', models.CharField(max_length=50, verbose_name='Пароль')),
                ('date_registered', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('profile_picture', models.ImageField(upload_to='profile_pictures', verbose_name='Фото профиля')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-date_registered', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=50, verbose_name='Тема урока')),
                ('content', models.TextField(verbose_name='Содержание урока')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lessons', to='upskill.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'ordering': ('course', 'subject'),
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_name', models.CharField(max_length=50, verbose_name='Название теста')),
                ('quiz_description', models.TextField(blank=True, verbose_name='Описание теста')),
                ('max_points', models.IntegerField(verbose_name='Максимальное количество баллов')),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='upskill.course')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
                'ordering': ['quiz_name'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_grade', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Оценка за тест')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='upskill.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='upskill.user')),
            ],
            options={
                'verbose_name': 'Результат',
                'verbose_name_plural': 'Результаты',
                'ordering': ['quiz', 'final_grade'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_payment', models.DateField(verbose_name='Дата платежа')),
                ('amount', models.IntegerField(verbose_name='Сумма платежа')),
                ('payment_type', models.CharField(max_length=50, verbose_name='Тип платежа')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='upskill.user')),
            ],
            options={
                'verbose_name': 'Оплата',
                'verbose_name_plural': 'Оплаты',
                'ordering': ('-date_of_payment', 'user', 'amount'),
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_enrollment', models.DateTimeField(auto_now_add=True, verbose_name='Дата зачисления')),
                ('completion_status', models.BooleanField(choices=[(True, 'Завершен'), (False, 'Не завершен')], default=False, verbose_name='Статус завершения')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='upskill.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='upskill.user')),
            ],
            options={
                'verbose_name': 'Зачисление',
                'verbose_name_plural': 'Зачисления',
                'ordering': ('-date_of_enrollment', 'user', 'course'),
            },
        ),
        migrations.AddField(
            model_name='course',
            name='users',
            field=models.ManyToManyField(related_name='courses', through='upskill.Enrollment', to='upskill.user', verbose_name='Зачисленные пользователи'),
        ),
    ]
